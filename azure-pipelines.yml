# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: 'Ubuntu-16.04'

steps:
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.11'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: false
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'

- task: ArchiveFiles@2
  displayName: "Archive files"
  inputs:
      rootFolderOrFile: "$(Build.Repository.LocalPath)"
      includeRootFolder: false
      archiveFile: "$(Build.Repository.LocalPath)/target/helloworld.war"

- task: ArchiveFiles@2
  displayName: "Archive files"
  inputs:
      rootFolderOrFile: "$(Build.Repository.LocalPath)"
      includeRootFolder: false
      archiveFile: "$(Build.Repository.LocalPath)/target/saap.xml"

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(System.DefaultWorkingDirectory)/target/helloworld.war'
  name: 'drop'

- task: CmdLine@2
  inputs:
    script: 'curl -X POST   ''http://appsvr4.industrysoln.sl.edst.ibm.com:8004/sap/bc/srt/rfc/sap/zvsts_ci_check/350/zvsts_ci_check1/zvsts_ci_check1''   -H ''authorization: Basic YmNoYXR0ZXJqZWU6aWJtMTIz''   -H ''cache-control: no-cache''   -H ''content-type: text/xml''   -d ''<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:urn="urn:sap-com:document:sap:rfc:functions">
   <soapenv:Header/>
   <soapenv:Body>
      <urn:ZVSTS_CI_CHECK>
         <!--Optional:-->
         <IM_I_EMAIL>
            <!--Zero or more repetitions:-->
            <item></item>
         </IM_I_EMAIL>
         <!--Optional:-->
         <IM_V_OBJECT>ZMMR_MD05_SHORTAGE_REPORT</IM_V_OBJECT>
         <!--Optional:-->
         <IM_V_TRANSPORT></IM_V_TRANSPORT>
      </urn:ZVSTS_CI_CHECK>
   </soapenv:Body>
</soapenv:Envelope>'' > $(System.DefaultWorkingDirectory)/target/saap.xml'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(System.DefaultWorkingDirectory)/target/saap.xml'
  name: 'drill'

- script:
    echo $(Build.ArtifactStagingDirectory)
    echo $(Build.BinariesDirectory)
    echo $(Build.Repository.LocalPath)
    echo $(System.DefaultWorkingDirectory)

# Upper code is proper don't touch=========================
# This is bash script======================================

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: 'count=1
      cat $(System.DefaultWorkingDirectory)/target/saap.xml
      result=`cat home/vsts/work/1/s/target/saap.xml| awk -F "[><]" ''/EX_V_RESULT/{print $3}''`
      echo "Result: $result"
       
      item="$(grep -c ''</item>'' /$(System.DefaultWorkingDirectory)/target/saap.xml)"
      echo "TotalItem: $item"
       
      cat /$(System.DefaultWorkingDirectory)/target/saap.xml | awk -F "[><]"  ''/TEXT|LINE/{print $3}''  |sed ''$!N;s/\n/;/''>linetext.log
       
      cat linetext.log |while read linedata
      do
         TEXT=$(echo $linedata |awk -F ";" ''{print $1}'')
         LINE=$(echo $linedata |awk -F ";" ''{print $2}'')
         if [ $item -ne $count ]
         then
           echo  -e "\n\t\"issues$count\": {\n\t\t\"line\": \"$LINE\",\n\t\t \"text\": \"$TEXT\"\n}," >>outlinetext.log
         else
          echo  -e "\n\t\"issues$count\": {\n\t\t\"line\": \"$LINE\",\n\t\t \"text\": \"$TEXT\"\n}" >>outlinetext.log
         fi
         count=`expr $count + 1`
      done
       
      echo  -e "{     \n
          \"itemTotal\": \"$item\", \n\t
          \"result\": \"$result\", \n\t
          $(cat outlinetext.log)
      }\n">/$(System.DefaultWorkingDirectory)/target/test.json
       
      rm -f outlinetext.log
           rm -f linetext.log'
